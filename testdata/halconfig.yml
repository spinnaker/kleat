artifacts:
  bitbucket:
    accounts:
    - name: my-bitbucket-account
      password: my-bitbucket-password
      username: my-bitbucket-username
      usernamePasswordFile: /var/secrets/bitbucket
    enabled: true
  gcs:
    accounts:
    - jsonPath: /var/secrets/gcs
      name: my-gcs-account
    enabled: true
  github:
    accounts:
    - name: my-github-artifact-account
      tokenFile: /var/secrets/github
    - name: my-github-artifact-account-2
      password: my-password
      username: my-username
    enabled: true
  gitlab:
    accounts:
    - name: my-gitlab-artifact-account
      tokenFile: /var/secrets/gitlab
    enabled: true
  gitrepo:
    accounts:
    - name: my-git-repo-account
      sshKnownHostsFilePath: /var/secrets/known_hosts
      sshPrivateKeyFilePath: /var/secrets/git_repo_private_key
      sshPrivateKeyPassphrase: my-passphrase
    enabled: true
  helm:
    accounts:
    - name: my-helm-account
      repository: http://my-repository.com
      usernamePasswordFile: /var/secrets/helm
    enabled: true
  http:
    accounts:
    - name: my-http-account
      usernamePasswordFile: /var/secrets/http
    enabled: true
  maven:
    accounts:
    - name: my-maven-account
      repositoryUrl: http://some.host.com/repository/path
    enabled: true
  oracle:
    accounts:
    - fingerprint: my-fingerprint
      name: my-oracle-artifact-account
      namespace: my-namespace
      privateKeyPassphrase: my-passphrase
      region: my-region
      sshPrivateKeyFilePath: /var/secrets/oracle
      tenancyId: my-tenancy-id
      userId: my-user-id
    enabled: true
  s3:
    accounts:
    - apiEndpoint: my-s3-endpoint
      apiRegion: my-s3-region
      awsAccessKeyId: my-key-id
      awsSecretAccessKey: my-key
      name: my-s3-account
      region: my-region
    enabled: true
  templates:
  - name: my-template
    templatePath: /var/secrets/my-template
canary:
  defaultMetricsAccount: my-google-canary-account
  defaultMetricsStore: stackdriver
  enabled: true
  serviceIntegrations:
    aws:
      accounts:
      - accessKeyId: my-key
        bucket: my-bucket
        endpoint: https://my-minio-server
        name: my-aws-account
        region: my-region
        rootFolder: my-root-folder
        supportedTypes:
        - CONFIGURATION_STORE
        - OBJECT_STORE
      enabled: true
      s3Enabled: true
    datadog:
      accounts:
      - apiKey: abcd
        applicationKey: efgh
        endpoint:
          baseUrl: https://my-datadog-server
        name: my-datadog-account
      enabled: true
    google:
      accounts:
      - bucket: kayenta
        jsonPath: /var/secrets/google.json
        name: my-google-canary-account
        project: my-google-project
        rootFolder: ""
        supportedTypes:
        - METRICS_STORE
        - CONFIGURATION_STORE
        - OBJECT_STORE
      enabled: true
      gcsEnabled: true
      metadataCachingIntervalMS: 30000
      stackdriverEnabled: true
    newrelic:
      accounts:
      - apiKey: my-api-key
        applicationKey: my-app-key
        endpoint:
          baseUrl: https://my-newrelic-server
        name: my-newrelic-account
      enabled: true
    prometheus:
      accounts:
      - endpoint:
          baseUrl: https://my-prom-server
        name: my-prom-account
        username: maggie
        usernamePasswordFile: /var/secrets/prometheus
      enabled: true
    signalfx:
      accounts:
      - accessToken: abc
        defaultLocationKey: my-location-key
        defaultScopeKey: my-scope-key
        endpoint:
          baseUrl: https://my-datadog-server
        name: my-signalfx-account
      enabled: true
  showAllConfigsEnabled: true
  storageAccountName: my-google-canary-account
  templatesEnabled: true
ci:
  codebuild:
    accounts:
    - accountId: my-id
      name: my-codebuild-account
    enabled: true
    secretAccessKey: my-key
  concourse:
    enabled: true
    masters:
    - name: my-concourse-account
      password: password
      url: https://my-concourse
      username: username
  gcb:
    accounts:
    - jsonKey: /var/secrets/google
      name: my-gcb-account
      project: my-google-project
    enabled: true
  jenkins:
    enabled: true
    masters:
    - address: https://my-jenkins
      name: my-jenkins-account
      password: password
      username: username
  travis:
    enabled: true
    masters:
    - address: https://my-travis
      filteredRepositories:
      - my-travis-repo
      name: my-travis-account
features:
  chaos: true
  gremlin: true
  managedPipelineTemplatesV2UI: true
  pipelineTemplates: true
metricStores:
  datadog:
    api_key: abc
    app_key: def
    enabled: true
    tags:
    - key:val
  newrelic:
    enabled: true
    host: https://my-newrelic-host
    insert_key: abc
    tags:
    - key:val
  period: 120
  prometheus:
    enabled: true
    push_gateway: https://my-prom-gateway
  stackdriver:
    credentials_path: /var/secrets/google
    enabled: true
    project: my-project
    zone: my-zone
notifications:
  bearychat:
    enabled: true
  email:
    enabled: true
  githubStatus:
    enabled: true
    token: my-github-token
  googlechat:
    enabled: true
  pubsub:
    enabled: true
  slack:
    baseUrl: https://slack.test/
    botName: my-bot
    enabled: true
    forceUseIncomingWebhook: true
    token: my-secret-token
  twilio:
    account: my-twilio-account
    baseUrl: https://api.twilio.com/
    enabled: true
    from: +1212-555-0100
    token: my-twilio-token
persistentStorage:
  azs:
    storageAccountKey: bXktYXpzLWFjY291bnQta2V5Cg==
    storageAccountName: my-azs-account-name
    storageContainerName: spinnaker
  gcs:
    bucket: my-spinnaker-pipelines
    bucketLocation: us
    enabled: true
    project: my-gcp-project
  oracle:
    bucketName: my-bucket
    compartmentId: compartment
    fingerprint: 74:63:08:82:95:75:e1:7c:33:31:bb:cb:00:c0:89:8b
    namespace: my-namespace
    privateKeyPassphrase: my-secret
    region: us-phoenix-1
    sshPrivateKeyFilePath: /var/secrets/oracle-key
    tenancyId: my-tenancy-id
    userId: my-user-id
  s3:
    accessKeyId: my-access-key-id
    bucket: my-bucket
    endpoint: my-endpoint
    pathStyleAccess: true
    region: my-region
    rootFolder: my-root-folder
    secretAccessKey: my-secret-access-key
    serverSideEncryption: AES256
  sql:
    enabled: true
    default:
      jdbcUrl: jdbc:mysql://localhost:3306/defaultdb
      user: defaultuser
      password: defaultpass
    migration:
      jdbcUrl: jdbc:mysql://localhost:3306/migrationdb
      user: migrationuser
      password: migrationpass
providers:
  appengine:
    accounts:
    - jsonPath: /var/secrets/appengine-account.json
      name: my-appengine-account
      project: spinnaker-maggie
      sshTrustUnknownHosts: true
    enabled: true
    primaryAccount: my-appengine-account
  aws:
    accounts:
    - accountId: id
      assumeRole: role
      defaultKeyPair: keyPair
      discovery: discovery
      edda: edda
      environment: env
      externalId: externalid
      lifecycleHooks:
      - defaultResult: ABANDON
        heartbeatTimeout: 12
        lifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
        notificationTargetARN: arn:aws:sns:{{region}}:{{accountId}}:term-targ
        roleARN: arn:aws:iam::{{accountId}}:role-arn
      name: my-aws-account
      regions:
      - name: myregion
    bakeryDefaults:
      awsAccessKey: key
      awsAssociatePublicIpAddress: true
      awsSecretKey: keysecret
      awsSubnetId: subnetid
      awsVpcId: vpcid
      baseImages:
      - baseImage:
          detailedDescription: my detailed description
          id: my-image-id
          shortDescription: my short description
        virtualizationSettings:
          - region: us-west-2
            sourceAmi: my-source-ami
            virtualizationType: pv
      defaultVirtualizationType: pv
      templateFile: file
    defaultKeyPairTemplate: '{{name}}-keypair'
    defaultRegions:
    - name: us-west-2
    defaults:
      iamRole: BaseIAMRole
    enabled: true
    primaryAccount: my-aws-account
  cloudfoundry:
    accounts:
    - api: api.sys.somesystem.com
      appsManagerUri: https://apps.sys.somesystem.com
      environment: dev
      metricsUri: https://metrics.sys.somesystem.com
      name: my-cf-account
      password: pw
      permissions: {}
      requiredGroupMembership: []
      skipSslValidation: true
      user: username
    enabled: true
    primaryAccount: my-cf-account
  dcos:
    accounts:
    - clusters:
      - name: my-dcos-cluster
        serviceKeyFile: /var/secrets/my-dcos-service-key
        uid: my-id
      dockerRegistries:
      - accountName: my-gcr-registry
      environment: dev
      name: my-dcos-account
    clusters:
    - caCertFile: /var/secrets/my-ca-cert-file
      dcosUrl: my-url
      insecureSkipTlsVerify: true
      loadBalancer:
        image: image
        serviceAccountSecret: secret
      name: my-dcos-cluster
    enabled: true
    primaryAccount: my-dcos-account
  dockerRegistry:
    accounts:
    - address: https://gcr.io
      cacheIntervalSeconds: 30
      cacheThreads: 1
      clientTimeoutMillis: 60000
      email: fake.email@spinnaker.io
      insecureRegistry: false
      name: my-gcr-registry
      paginateSize: 100
      passwordFile: /var/secrets/gcr-account.json
      repositories:
      - my-repo
      sortTagsByDate: false
      trackDigests: false
      username: _json_key
    enabled: true
    primaryAccount: my-gcr-registry
  ecs:
    accounts:
    - awsAccount: my-aws-account
      environment: dev
      name: my-ecs-account
    enabled: true
    primaryAccount: my-ecs-account
  google:
    accounts:
    - alphaListed: true
      consul:
        agentEndpoint: localhost
        agentPort: 8500
        datacenters: []
        enabled: true
      jsonPath: /var/secrets/gce-account.json
      name: my-gce-account
      project: spinnaker-maggie
      regions:
      - us-east1-b
    bakeryDefaults:
      baseImages:
      - baseImage:
          detailedDescription: my detailed description
          id: my-image-id
          imageFamily: true
          shortDescription: my short description
        virtualizationSettings:
          sourceImage: my-source-image
          sourceImageFamily: my-source-image-family
      network: default
      networkProjectId: my-network-project-id
      templateFile: gce.json
      useInternalIp: true
      zone: us-central1-f
    enabled: true
    primaryAccount: my-gce-account
  huaweicloud:
    accounts:
    - accountType: dev
      authUrl: myurl
      domainName: my-domain-name
      environment: dev
      insecure: true
      name: my-huawei-account
      password: pw
      projectName: project
      regions:
      - us-east1
      username: username
    bakeryDefaults:
      authUrl: url
      baseImages:
      - baseImage:
          id: myimage
          packageType: deb
          shortDescription: short
          templateFile: file
        virtualizationSettings:
        - eipType: eiptype
          instanceType: instancetype
          region: us-east1
          sourceImageId: id
          sshUserName: username
      domainName: domain-name
      eipBandwidthSize: 10
      insecure: true
      password: pw
      projectName: project
      securityGroup: group
      subnetId: id
      templateFile: file
      username: username
      vpcId: vpcid
    enabled: true
    primaryAccount: my-huawei-account
  kubernetes:
    accounts:
    - cacheThreads: 1
      context: spinnaker
      kubeconfigFile: /var/secrets/k8s-kubeconfig
      name: k8s
      omitNamespaces:
      - default
      - kube-public
      - kube-system
      - docs-site-v1
    enabled: true
    primaryAccount: k8s
  oracle:
    accounts:
    - compartmentId: compartment-id
      environment: dev
      fingerprint: fingerprint
      name: my-oracle-account
      privateKeyPassphrase: pw
      region: us-east1
      sshPrivateKeyFilePath: /var/secrets/oracle_ssh_key_file
      tenancyId: tenancy-id
      userId: user-id
    bakeryDefaults:
      availabilityDomain: domain
      baseImages:
      - baseImage:
          detailedDescription: blahblahblah
          id: my-base-image
          packageType: deb
          shortDescription: blah
          templateFile: /var/secrets/oracle_template_file
        virtualizationSettings:
          baseImageId: base-image-id
          sshUserName: username
      instanceShape: shape
      subnetId: id
      templateFile: /var/secrets/oracle_template_file
    enabled: true
    primaryAccount: my-oracle-account
pubsub:
  enabled: true
  google:
    enabled: true
    publishers:
    - content: NOTIFICATIONS
      jsonPath: /var/secrets/my-publisher-token
      name: publish-test
      project: my-project
      topicName: my-topic
    subscriptions:
    - ackDeadlineSeconds: 10
      jsonPath: /var/secrets/my-subscriber-token
      messageFormat: GCR
      name: subscription-test
      project: my-project
      subscriptionName: my-subscription
repository:
  artifactory:
    enabled: true
    searches:
    - baseUrl: https://my-artifactory
      groupId: abc
      name: my-search
      password: my-artifactory-pw
      repo: my-repo
      username: my-artifactory-un
security:
  apiSecurity:
    overrideBaseUrl: https://spinnaker.test:8084
    ssl:
      clientAuth: WANT
      enabled: true
      keyAlias: spinnaker
      keyStore: /var/secrets/keystore.jks
      keyStorePassword: my-keystore-password
      keyStoreType: jks
      trustStore: /var/secrets/truststore.jks
      trustStorePassword: my-truststore-password
      trustStoreType: jks
  authn:
    basic:
      enabled: true
      user:
        password: my-password
        username: my-username
    enabled: true
    iap:
      audience: projects/0/apps/0
      enabled: true
      iapVerifyKeyUrl: https://my-url.test/
      issuerId: my-issuer-id
      jwtHeader: X-JWT-HEADER
    ldap:
      enabled: true
      groupSearchBase: groups
      managerPassword: my-manager-password
      url: ldaps://ldap.my-organization.test:636/dc=my-organization,dc=com
      userDnPattern: uid={0},ou=users
      userSearchBase: users
      userSearchFilter: (d={0})
    oauth2:
      client:
        accessTokenUri: https://www.googleapis.com/oauth2/v4/token
        clientId: my-client
        clientSecret: my-secret
        scope: profile email
        userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      enabled: true
      resource:
        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
      userInfoMapping:
        email: email
        firstName: given_name
        lastName: family_name
      userInfoRequirements:
        baz: qux
        foo: bar
    saml:
      enabled: true
      keyStore: /var/secrets/keystore.jks
      keyStoreAliasName: my-key
      keyStorePassword: my-keystore-password
      metadataUrl: /var/secrets/metadata
      redirectBasePath: /
      redirectHostname: spinnaker.test:8084
      redirectProtocol: https
      userAttributeMapping:
        email: user-email
    x509:
      enabled: true
      roleOid: 1.2.840.10070.8.1
      subjectPrincipalRegex: user.*
  authz:
    enabled: true
    groupMembership:
      file:
        path: /var/secrets/authz-file.yml
      github:
        accessToken: my-token
        organization: my-org
      google:
        adminUsername: my-admin-username
        credentialPath: /var/secrets/credentials.json
        domain: myorg.test
      ldap:
        groupSearchBase: groups
        managerPassword: my-manager-password
        url: ldaps://ldap.my-organization.com:636/dc=my-organization,dc=com
        userDnPattern: uid={0},ou=users
        userSearchBase: users
        userSearchFilter: (d={0})
      service: FILE
  uiSecurity:
    overrideBaseUrl: https://spinnaker.test:9000
    ssl:
      enabled: true
      sslCACertificateFile: /var/secrets/ca.crt
      sslCertificateFile: /var/secrets/spinnaker.crt
      sslCertificateKeyFile: /var/secrets/spinnaker.key.pem
      sslCertificatePassphrase: my-cert-password
stats:
  enabled: false
timezone: America/Chicago
version: master-latest-unvalidated
webhook:
  trust:
    enabled: true
    trustStore: /var/secrets/webhook-keystore.jks
    trustStorePassword: abcdefg
managedDelivery:
  enabled: true
  keel:
    plugins:
      ec2:
        enabled: false
      k8s:
        enabled: true
